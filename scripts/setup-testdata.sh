#!/bin/bash
# setup-testdata.sh - Creates test data structure for manual and automated testing

set -e # Exit on error

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Setting up test data...${NC}"

# Get the project root directory (parent of scripts/)
PROJECT_ROOT="$(cd "$(dirname "$0")/.." && pwd)"

# Create directory structure
echo "Creating directory structure..."
mkdir -p "$PROJECT_ROOT/e2e/testdata/dotfiles/home/.config/nvim"
mkdir -p "$PROJECT_ROOT/e2e/testdata/dotfiles/private/home/.ssh"
mkdir -p "$PROJECT_ROOT/e2e/testdata/target"

# Create sample files
echo "Creating sample dotfiles..."
echo "# Test bashrc - generated by setup-testdata.sh" >"$PROJECT_ROOT/e2e/testdata/dotfiles/home/.bashrc"
echo "alias ll='ls -la'" >>"$PROJECT_ROOT/e2e/testdata/dotfiles/home/.bashrc"
echo "export EDITOR=vim" >>"$PROJECT_ROOT/e2e/testdata/dotfiles/home/.bashrc"

cat >"$PROJECT_ROOT/e2e/testdata/dotfiles/home/.gitconfig" <<EOF
[user]
  name = Test User
  email = test@example.com
[core]
  editor = vim
EOF

cat >"$PROJECT_ROOT/e2e/testdata/dotfiles/home/.config/nvim/init.vim" <<EOF
" Test vim config
set number
set autoindent
set expandtab
set tabstop=2
EOF

cat >"$PROJECT_ROOT/e2e/testdata/dotfiles/private/home/.ssh/config" <<EOF
Host test
  HostName example.com
  User testuser
  Port 22

Host *.test.local
  StrictHostKeyChecking no
  UserKnownHostsFile /dev/null
EOF

# Create test config with absolute paths
echo "Creating test configuration..."
cat >"$PROJECT_ROOT/e2e/testdata/config.json" <<EOF
{
  "link_mappings": [
    {
      "source": "$PROJECT_ROOT/e2e/testdata/dotfiles/home",
      "target": "$PROJECT_ROOT/e2e/testdata/target"
    },
    {
      "source": "$PROJECT_ROOT/e2e/testdata/dotfiles/private/home",
      "target": "$PROJECT_ROOT/e2e/testdata/target"
    }
  ],
  "ignore_patterns": [".git", "*.swp", ".DS_Store"]
}
EOF

# Create .gitkeep
touch "$PROJECT_ROOT/e2e/testdata/target/.gitkeep"

# Create an invalid config for error testing
cat >"$PROJECT_ROOT/e2e/testdata/invalid.json" <<EOF
{
  "link_mappings": [
    {
      "source": "relative/path",
      "target": "~/invalid"
    }
  ]
}
EOF

echo -e "${GREEN}âœ“ Test data setup complete!${NC}"
echo
echo "Test environment created at: $PROJECT_ROOT/e2e/testdata/"
echo "Configuration file: $PROJECT_ROOT/e2e/testdata/config.json"
echo
echo "You can now test lnk commands safely:"
echo "  lnk --config e2e/testdata/config.json status"
echo "  lnk --config e2e/testdata/config.json create"
echo "  lnk --config e2e/testdata/config.json remove"
echo
echo "To reset: rm -rf e2e/testdata/target/* && ./scripts/setup-testdata.sh"

